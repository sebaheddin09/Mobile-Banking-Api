openapi: 3.1.0
x-stoplight:
  id: q30gjlk5ggpke
info:
  title: Mobile Banking API
  version: '1.0'
  description: 'The document defines REST services provided by Mobile Application and intended for backend and frontend application developers. '
servers:
  - url: 'http://localhost:3000'
paths:
  /country-code:
    get:
      summary: ''
      operationId: get-country-code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                x-examples:
                  Example 1:
                    - Country: Azerbaijan
                      Code: '+994'
                items:
                  type: object
                  properties:
                    Country:
                      type: string
                      description: Country code
                      example: Azerbaijan
                    Code:
                      type: string
                      description: Countries’ names
                      example: '+994'
                  required:
                    - Country
                    - Code
              examples:
                Example 1:
                  value:
                    - Country: Azerbaijan
                      Code: '+994'
      description: This endpoint is used to obtain the country code
      parameters:
        - $ref: '#/components/parameters/Receiver-Participant-Code'
        - $ref: '#/components/parameters/PSU-Device-ID'
        - $ref: '#/components/parameters/PSU-Device-ID-Type'
        - $ref: '#/components/parameters/PSU-IP-Address'
        - $ref: '#/components/parameters/PSU-ID'
        - $ref: '#/components/parameters/PSU-ID-Type'
      requestBody:
        content: {}
    parameters: []
  /registration:
    post:
      summary: Registration
      operationId: post-registration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    RegistrationId: 990000862471854-210323-21519
                    RegistrationStatus: Waiting
                    RegistrationDateTime: '2023-03-21T11:37:48'
                properties:
                  registrationId:
                    type: string
                    description: |-
                      Registration unique identification generated by account owner participant (i.e. UUID)                                            Registration Id must be complex and unique. Recommendation for registration generation:

                      {DEVICE ID} - {DATETIME} - {SEQUENCE NUMBER}
                                                                           E.g.: 990000862471854-210323-21519
                      (DATETIME format must be ddmmyy (yy – last two digits of the year) )
                    maxLength: 28
                    example: 990000862471854-210323-21519
                    x-stoplight:
                      id: xmrx4q61v4178
                  registrationStatus:
                    type: string
                    description: Registration status
                    enum:
                      - Success
                      - Waiting
                      - Unsuccess
                    x-stoplight:
                      id: g0qnemlhw65ol
                  registrationDateTime:
                    type: string
                    description: |-
                      Registration time
                      (yyyy-mm-ddThh:mm:ss)
                    format: date-time
                    example: '2023-03-21T11:37:48'
                    x-stoplight:
                      id: 2meiv25onf415
                required:
                  - registrationId
                  - registrationStatus
                  - registrationDateTime
              examples:
                Example 1:
                  value:
                    registrationId: 990000862471854-210323-21519
                    registrationStatus: Waiting
                    registrationDateTime: '2023-03-21T11:37:48'
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    ErrorCode: WRONG_DATA
                    Description: Wrong data provided in request
                properties:
                  ErrorCode:
                    type: string
                  Description:
                    type: string
                required:
                  - ErrorCode
                  - Description
              examples:
                Example 1:
                  value:
                    ErrorCode: WRONG_DATA
                    Description: Wrong data provided in request
      description: Customers use it to register on the App
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  PhoneNumber: 51 748 51 75
              properties:
                phoneNumber:
                  type: string
                  description: Phone Number of Customer
                  x-stoplight:
                    id: m2uugeboji9ll
                  example: '994517485175'
              required:
                - phoneNumber
            examples:
              Example 1:
                value:
                  phoneNumber: '994517485175'
        description: ''
      parameters:
        - $ref: '#/components/parameters/Receiver-Participant-Code'
        - $ref: '#/components/parameters/PSU-Device-ID'
        - $ref: '#/components/parameters/PSU-Device-ID-Type'
        - $ref: '#/components/parameters/PSU-IP-Address'
        - $ref: '#/components/parameters/PSU-ID'
        - $ref: '#/components/parameters/PSU-ID-Type'
  '/registration/{registrationId}/authentications':
    parameters:
      - schema:
          type: string
        name: registrationId
        in: path
        required: true
        description: The code sent in the previous process
    post:
      summary: Authentication
      operationId: post-registration-RegistrationId-authorizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    SCAStatus: Authorised
                properties:
                  SCAStatus:
                    type: string
                    enum:
                      - Authorised
                      - Rejected
                    description: SCA status (Status of authorization)
                required:
                  - SCAStatus
              examples:
                Example 1:
                  value:
                    SCAStatus: Authorised
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    ErrorCode: WRONG_OTP
                    Description: SCAAuthenticationData is not valid
                properties:
                  ErrorCode:
                    type: string
                  Description:
                    type: string
                required:
                  - ErrorCode
                  - Description
              examples:
                Example 1:
                  value:
                    ErrorCode: WRONG_OTP
                    Description: SCAAuthenticationData is not valid
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    ErrorCode: OTP_EXPIRED
                    Description: OTP has already expired
                properties:
                  ErrorCode:
                    type: string
                  Description:
                    type: string
                required:
                  - ErrorCode
                  - Description
              examples:
                Example 1:
                  value:
                    ErrorCode: OTP_EXPIRED
                    Description: OTP has already expired
      description: Backend will be able to OTP authenticate the consents received by customers for using their APP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  SCAAuthenticationData: '123456'
              properties:
                SCAAuthenticationData:
                  type: integer
                  description: This is the OTP code sent to the customer's phone
                  maximum: 6
                  example: 123456
                  minimum: 6
              required:
                - SCAAuthenticationData
            examples:
              Example 1:
                value:
                  SCAAuthenticationData: 123456
        description: ''
      parameters:
        - $ref: '#/components/parameters/Receiver-Participant-Code'
        - $ref: '#/components/parameters/PSU-Device-ID'
        - $ref: '#/components/parameters/PSU-Device-ID-Type'
        - $ref: '#/components/parameters/PSU-IP-Address'
        - $ref: '#/components/parameters/PSU-ID'
        - $ref: '#/components/parameters/PSU-ID-Type'
  '/registration/{registrationId}/newOTP':
    parameters:
      - schema:
          type: string
        name: registrationId
        in: path
        required: true
        description: The code sent in the previous process
    post:
      summary: Resend OTP
      operationId: post-registration-RegistrationId-newOTP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    SCAStatus: Authorised
                properties:
                  SCAStatus:
                    type: string
                    description: SCA status (Status of authorization)
                    enum:
                      - Authorised
                      - Rejected
                required:
                  - SCAStatus
              examples:
                Example 1:
                  value:
                    SCAStatus: Authorised
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    ErrorCode: WRONG_OTP
                    Description: SCAAuthenticationData is not valid
                properties:
                  ErrorCode:
                    type: string
                  Description:
                    type: string
                required:
                  - ErrorCode
                  - Description
              examples:
                Example 1:
                  value:
                    ErrorCode: WRONG_OTP
                    Description: SCAAuthenticationData is not valid
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    ErrorCode: OTP_EXPIRED
                    Description: OTP has already expired
                properties:
                  ErrorCode:
                    type: string
                  Description:
                    type: string
                required:
                  - ErrorCode
                  - Description
              examples:
                Example 1:
                  value:
                    ErrorCode: OTP_EXPIRED
                    Description: OTP has already expired
      description: This endpoint is used to resend the OTP.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  SCAAuthenticationData: '654321'
              properties:
                SCAAuthenticationData:
                  type: integer
                  description: This is the OTP code sent to the customer's phone
                  example: 654321
                  maximum: 6
                  minimum: 6
              required:
                - SCAAuthenticationData
            examples:
              Example 1:
                value:
                  SCAAuthenticationData: '654321'
      parameters:
        - $ref: '#/components/parameters/Receiver-Participant-Code'
        - $ref: '#/components/parameters/PSU-Device-ID'
        - $ref: '#/components/parameters/PSU-Device-ID-Type'
        - $ref: '#/components/parameters/PSU-IP-Address'
        - $ref: '#/components/parameters/PSU-ID'
        - $ref: '#/components/parameters/PSU-ID-Type'
  '/registration/{registrationId}/createPIN':
    parameters:
      - schema:
          type: string
        name: registrationId
        in: path
        required: true
        description: The code sent in the previous process
    post:
      summary: Create Pin
      operationId: post-registration-RegistrationId-createPIN
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    PINStatus: Matched
                    RegistrationStatus: Success
                    userID: 990000862471854-210323-21519
                properties:
                  PINStatus:
                    type: string
                    enum:
                      - Matched
                      - Unmatched
                    example: Matched
                    description: PIN status (Status of PIN confirmation)
                  registrationStatus:
                    type: string
                    description: Registration status
                    enum:
                      - Success
                      - Waiting
                      - Unsuccess
                    example: Success
                    x-stoplight:
                      id: sm2jvpf46jcxy
                  userID:
                    type: string
                    description: Id of successful registration is userID
                    maxLength: 28
                    example: 990000862471854-210323-21519
                  tokens:
                    $ref: '#/components/schemas/Tokens'
                    x-stoplight:
                      id: f4850fi05juaj
                required:
                  - PINStatus
                  - registrationStatus
                  - userID
              examples:
                Example 1:
                  value:
                    PINStatus: Matched
                    registrationStatus: Success
                    userID: 990000862471854-210323-21519
                    tokens:
                      accessToken: fdb8fdbecf1d03ce5e6125c067733c0d51de209c
                      refreshToken: ou59wrjfwj8xbow09jdc127quncytp4szt5vprn6l
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    ErrorCode: PINs_INVALID
                    Description: PINs do not match
                properties:
                  ErrorCode:
                    type: string
                  Description:
                    type: string
                required:
                  - ErrorCode
                  - Description
              examples:
                Example 1:
                  value:
                    ErrorCode: PINs_INVALID
                    Description: PINs do not match
      description: Customers use this to create a PIN.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  PIN: '1234'
                  ConfirmPIN: '1234'
              properties:
                PIN:
                  type: integer
                  description: This is the PIN created by customers for entering the APP
                  minimum: 4
                  maximum: 4
                  example: 1234
                confirmPIN:
                  type: integer
                  description: This is the repeated PIN
                  example: 1234
                  maximum: 4
                  minimum: 4
                  x-stoplight:
                    id: 2znyk70cb2jcn
              required:
                - PIN
                - confirmPIN
            examples:
              Example 1:
                value:
                  PIN: 1234
                  confirmPIN: 1234
      parameters:
        - $ref: '#/components/parameters/Receiver-Participant-Code'
        - $ref: '#/components/parameters/PSU-Device-ID'
        - $ref: '#/components/parameters/PSU-Device-ID-Type'
        - $ref: '#/components/parameters/PSU-IP-Address'
        - $ref: '#/components/parameters/PSU-ID'
        - $ref: '#/components/parameters/PSU-ID-Type'
  '/login/{userId}':
    parameters:
      - schema:
          type: string
          maxLength: 28
          example: 990000862471854-210323-21519
          pattern: '{DEVICE ID} - {DATETIME} - {SEQUENCE NUMBER}'
        name: userId
        in: path
        required: true
        description: Id of customer’s account
    post:
      summary: ''
      operationId: post-login-userId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    loginStatus: Confirm
                properties:
                  loginStatus:
                    type: string
                    description: Log-in status (Status of Log in confirmation)
                    enum:
                      - Confirm
                      - Reject
                    example: Confirm
                  tokens:
                    $ref: '#/components/schemas/Tokens'
                    x-stoplight:
                      id: inmctyzfofc6s
                required:
                  - loginStatus
              examples:
                Example 1:
                  value:
                    loginStatus: Confirm
                    tokens:
                      accessToken: fdb8fdbecf1d03ce5e6125c067733c0d51de209c
                      refreshToken: ou59wrjfwj8xbow09jdc127quncytp4szt5vprn6l
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    ErrorCode: WRONG_PIN
                    Description: PIN does not exist
                properties:
                  ErrorCode:
                    type: string
                  Description:
                    type: string
                required:
                  - ErrorCode
                  - Description
              examples:
                Example 1:
                  value:
                    ErrorCode: WRONG_PIN
                    Description: PIN does not exist
      description: Customers use this to log in the APP.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  PIN: 1234
              properties:
                PIN:
                  type: integer
                  description: This is the PIN created by customers for entering the APP
                  maximum: 4
                  minimum: 4
                  example: 1234
              required:
                - PIN
            examples:
              Example 1:
                value:
                  PIN: 1234
      parameters:
        - $ref: '#/components/parameters/Receiver-Participant-Code'
        - $ref: '#/components/parameters/PSU-Device-ID'
        - $ref: '#/components/parameters/PSU-Device-ID-Type'
        - $ref: '#/components/parameters/PSU-IP-Address'
        - $ref: '#/components/parameters/PSU-ID'
        - $ref: '#/components/parameters/PSU-ID-Type'
components:
  schemas:
    Tokens:
      title: Tokens
      x-stoplight:
        id: qlfbue901ajo3
      type: object
      properties:
        accessToken:
          type: string
          x-stoplight:
            id: wrj4oe735zrr8
          description: Token for entering account
          example: fdb8fdbecf1d03ce5e6125c067733c0d51de209c
          maxLength: 40
          minLength: 40
        refreshToken:
          type: string
          x-stoplight:
            id: 6q5gla4k7x7fq
          description: Token for refreshing access token
          example: ou59wrjfwj8xbow09jdc127quncytp4szt5vprn6l
          maxLength: 40
          minLength: 40
      required:
        - accessToken
        - refreshToken
      description: Tokens for entering the App
  securitySchemes: {}
  parameters:
    Sender-Participant-Code:
      name: Sender-Participant-Code
      in: header
      schema:
        type: string
        example: AZERAZ20
        maxLength: 8
      description: Code of the sending organization
    Receiver-Participant-Code:
      name: Receiver-Participant-Code
      in: header
      required: true
      schema:
        type: string
        example: MOSZAZ20
        maxLength: 8
      description: Receiving organization code
    PSU-Device-ID:
      name: PSU-Device-ID
      in: header
      required: true
      schema:
        type: string
        example: '43437437347347'
        maxLength: 128
      description: The IMEI code of the mobile application or the IP address of the WEB site
    Consent-ID:
      name: Consent-ID
      in: header
      required: true
      schema:
        type: string
        example: qwer3456tzui7890
        maxLength: 30
      description: Consent identifier. Consent is obtained at the time of registration request
    PSU-Device-ID-Type:
      name: PSU-Device-ID-Type
      in: header
      required: true
      schema:
        type: string
        enum:
          - IMEI
          - TERMINAL
          - WEB
          - MERCHANT
        example: IMEI
      description: 'UUID (Universally Unique Identifier) type for a device, which is used by the customer type'
    PSU-IP-Address:
      name: PSU-IP-Address
      in: header
      required: true
      schema:
        type: string
        example: 172.168.1.1
        maxLength: 128
      description: Your mobile application or WEB site IP address to which the 3rd party connects to receive data
    PSU-ID:
      name: PSU-ID
      in: header
      required: true
      schema:
        type: string
        example: '5VBK5VR '
        maxLength: 128
      description: The national identity number of the customer or TIN
    PSU-ID-Type:
      name: PSU-ID-Type
      in: header
      required: true
      schema:
        type: string
        enum:
          - TIN
          - FIN
        example: FIN
      description: 'National identity type:             PIN - Personal Identification number;                                      TIN - Tax Identification number '
x-internal: true
